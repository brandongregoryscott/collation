"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[397],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,b=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(b,l(l({ref:t},u),{},{components:n})):r.createElement(b,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1982:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),l=["components"],i={},p="Alphabetize Jsx Props",s={unversionedId:"rules/alphabetize-jsx-props",id:"rules/alphabetize-jsx-props",title:"Alphabetize Jsx Props",description:"Name",source:"@site/docs/rules/alphabetize-jsx-props.md",sourceDirName:"rules",slug:"/rules/alphabetize-jsx-props",permalink:"/collation/docs/rules/alphabetize-jsx-props",editUrl:"https://github.com/brandongregoryscott/collation/tree/main/documentation/docs/docs/rules/alphabetize-jsx-props.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Alphabetize Interfaces",permalink:"/collation/docs/rules/alphabetize-interfaces"},next:{title:"Named Exports Only",permalink:"/collation/docs/rules/named-exports-only"}},u=[{value:"Name",id:"name",children:[],level:2},{value:"Description",id:"description",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"Notes",id:"notes",children:[{value:"Spread props",id:"spread-props",children:[],level:3},{value:"Nested JSX",id:"nested-jsx",children:[],level:3}],level:2}],c={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"alphabetize-jsx-props"},"Alphabetize Jsx Props"),(0,a.kt)("h2",{id:"name"},"Name"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"alphabetize-jsx-props")),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Alphabetizes props for components/JSX elements."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'return (\n    <Button onClick={() => {}} type="submit" disabled={isLoading}>\n        Example\n    </Button>\n);\n')),(0,a.kt)("p",null,"will be transformed to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'return (\n    <Button disabled={isLoading} onClick={() => {}} type="submit">\n        Example\n    </Button>\n);\n')),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("h3",{id:"spread-props"},"Spread props"),(0,a.kt)("p",null,"Spread props (i.e. ",(0,a.kt)("inlineCode",{parentName:"p"},"<Button {...buttonProps}>"),") will always maintain their original ordering, since moving them above or below other prop assignments can change the underlying behavior of the code. Props that appear before or after the spread assignments will still be alphabetized within their respective section."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'const Example = (props) => {\n    return (\n        <button\n            suppress={true}\n            onClick={_.noop}\n            {...buttonProps}\n            onBeforeInput={() => {}}\n            about="test"\n            disabled={true}\n            {...someOtherButtonProps}\n            something={true}\n            readOnly={false}></button>\n    );\n};\n')),(0,a.kt)("p",null,"will be transformed to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'const Example = (props) => {\n    return (\n        <button\n            onClick={_.noop}\n            suppress={true}\n            {...buttonProps}\n            about="test"\n            disabled={true}\n            onBeforeInput={() => {}}\n            {...someOtherButtonProps}\n            readOnly={false}\n            something={true}></button>\n    );\n};\n')),(0,a.kt)("h3",{id:"nested-jsx"},"Nested JSX"),(0,a.kt)("p",null,"Components that receive JSX as props will also have their props alphabetized."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Button\n    marginY={8}\n    marginRight={12}\n    iconAfter={<CogIcon size={24} color="gray" />}>\n    Settings\n</Button>\n')),(0,a.kt)("p",null,"will be transformed to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Button\n    iconAfter={<CogIcon color="gray" size={24} />}\n    marginRight={12}\n    marginY={8}>\n    Settings\n</Button>\n')))}d.isMDXComponent=!0}}]);