"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[460],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,f=m["".concat(i,".").concat(d)]||m[d]||c[d]||a;return r?n.createElement(f,p(p({ref:t},s),{},{components:r})):n.createElement(f,p({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,p[1]=l;for(var u=2;u<a;u++)p[u]=r[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1834:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return s},default:function(){return m}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),p=["components"],l={},i="Group Exports",u={unversionedId:"rules/group-exports",id:"rules/group-exports",title:"Group Exports",description:"Name",source:"@site/docs/rules/group-exports.md",sourceDirName:"rules",slug:"/rules/group-exports",permalink:"/docs/rules/group-exports",editUrl:"https://github.com/brandongregoryscott/eslint-plugin-collation/tree/main/documentation/docs/rules/group-exports.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rules",permalink:"/docs/rules/"},next:{title:"No Default Export",permalink:"/docs/rules/no-default-export"}},s=[{value:"Name",id:"name",children:[],level:2},{value:"Description",id:"description",children:[],level:2},{value:"Example",id:"example",children:[{value:"Type exports",id:"type-exports",children:[],level:3}],level:2},{value:"Notes",id:"notes",children:[],level:2}],c={toc:s};function m(e){var t=e.components,r=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"group-exports"},"Group Exports"),(0,a.kt)("h2",{id:"name"},"Name"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"group-exports")),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Consolidates multiple export statements"),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const foo = 5;\nconst bar = 4;\nexport { foo };\nexport { bar };\n")),(0,a.kt)("p",null,"will be transformed to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const foo = 5;\nconst bar = 4;\n\nexport { bar, foo };\n")),(0,a.kt)("h3",{id:"type-exports"},"Type exports"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"export type")," syntax will be preserved"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type Foo = number;\ntype Bar = string;\nexport type { Foo };\nexport type { Bar };\n")),(0,a.kt)("p",null,"will be transformed to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type Foo = number;\ntype Bar = string;\n\nexport type { Bar, Foo };\n")),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("p",null,"The fix for this rule does not handle any whitespace/formatting, and may add additional new lines. It's assumed you are using a more general formatting tool like ",(0,a.kt)("inlineCode",{parentName:"p"},"Prettier")," to strip away unnecessary line breaks."),(0,a.kt)("p",null,"For example, when there are multiple value ",(0,a.kt)("em",{parentName:"p"},"and")," type exports:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'type Foo = number;\nconst foo: Foo = 5;\n\ntype Bar = string;\nconst bar: Bar = "bar";\n\nexport type { Foo };\nexport { foo };\nexport type { Bar };\nexport { bar };\n')),(0,a.kt)("p",null,"will be transformed to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'type Foo = number;\nconst foo: Foo = 5;\n\ntype Bar = string;\nconst bar: Bar = "bar";\n\n\n\nexport type { Bar, Foo };\nexport { bar, foo };\n')))}m.isMDXComponent=!0}}]);